
package com.mycompany.lab3standalone;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PersonServiceI", targetNamespace = "http://lab3standalone.mycompany.com/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PersonServiceI {


    /**
     * 
     * @param request
     * @return
     *     returns java.lang.String
     * @throws NotFoundException
     */
    @WebMethod
    @WebResult(partName = "return")
    public String deletePerson(
        @WebParam(name = "request", partName = "request")
        int request)
        throws NotFoundException
    ;

    /**
     * 
     * @param request
     * @return
     *     returns int
     * @throws NotFoundException
     */
    @WebMethod
    @WebResult(partName = "return")
    public int createPerson(
        @WebParam(name = "request", partName = "request")
        CreateRequest request)
        throws NotFoundException
    ;

    /**
     * 
     * @param fields
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    public String getPersons(
        @WebParam(name = "fields", partName = "fields")
        FindRequest fields);

    /**
     * 
     * @param request
     * @return
     *     returns java.lang.String
     * @throws NotFoundException
     */
    @WebMethod
    @WebResult(partName = "return")
    public String updatePerson(
        @WebParam(name = "request", partName = "request")
        UpdateRequest request)
        throws NotFoundException
    ;

}
